========================================================
css: rogers_rpres.css
incremental: true
<topic>R Markdown Language</topic>
<hr>
<lecture>3</lecture>

Creating Markdown Files
=======================================================
type: chapter

https://github.com/rogerswt/coding_style_lecture

General Idea
=======================================================
* A markdown file combines text and R code to generate a document or web page
* The presentation used in this lecture is a markdown file
* Markdown has its own language, separate from R

Starting a Markdown Document
=======================================================
incremental: false
Pick

File > New > R Markdown > Word

or use the <span style="vertical-align:sub;">![plus icon](img/rstudio1.png)</span> icon.

Markdown requires that you have the knitr package installed.

<g>fingers crossed...</g>

What you will see
=======================================================
incremental: false
A new markdown file will open up with some default material

**Keep** the top lines between dashes:


```{r, eval=FALSE}
---
title: "Untitled"
output: word_document
---
```

Delete the rest.

You might want to save this file under some name

Generating a document
=======================================================
incremental: false
* click on the "Knit Word" button
* a document will open.
* Change the title, and re-knit
* Type some text under the "- - -", re-knit

Basic text: bold
=======================================================
incremental: false
To boldface text, enclose it between double asterisks:
```{r, eval=FALSE}
This is a **boldfaced** word
```
_Produces:_

This is a **boldfaced** word

Basic text: italics
=======================================================
incremental: false
To italicize a word, you can use single asterisks or underscores:

```{r, eval=FALSE}
This is an *italicized* word
This is an _italicized_ word
```
_Produces:_

This is an _italicized_ word

Basic text: bold+italics
=======================================================
incremental: false
```{r, eval=FALSE}
This is ***both*** at the same time
This is _**both**_ at the same time
```
_Produces:_

This is _**both**_ at the same time

Headers
=======================================================
incremental: false
Lines that start with one of more #'s are headers.  Note: you need a space after the #'s
```{r, eval=FALSE}
# Big Header
```
<span style="font-size:50pt">Big Header</span>
```{r, eval=FALSE}
## Smaller Header
```
<span style="font-size:45pt">Smaller Header</span>
```{r, eval=FALSE}
### Third level header
```
<span style="font-size:38pt">Third level Header</span>

Headers (alternative)
=======================================================
incremental: false
A line that is underlined by "=" or "-" is also recognized as a header:
```{r, eval=FALSE}
 Big Header
 ==========
```
<span style="font-size:50pt">Big Header</span>

&nbsp;

```{r, eval=FALSE}
 Smaller Header
 --------------
```
<span style="font-size:45pt">Smaller Header</span>

Bullet lists
=======================================================
incremental: false
A line that starts with an (*) is a bullet:
```{r, eval=FALSE}
* Item 1
* Item 2
```
_Produces:_

* Item 1
* Item 2

A Trap
=======================================================
incremental: false
You need a blank line after a paragraph
```{r, eval=FALSE}
This is some text
* Item 1
* Item 2
```
Will not always work, but this will
```{r, eval=FALSE}
This is some text

* Item 1
* Item 2
```

Nested Bullet lists
=======================================================
incremental: false
To nest them, simply indent _by at least 4 spaces_
```{r, eval=FALSE}
* Item 1
   * Item 1a
   * Item 1b
* Item 2
```
_Produces:_

* Item 1
   * Item 1a
   * Item 1b
* Item 2

Numbered lists
=======================================================
incremental: false
A line that starts with a number followed by a period is a numbered list item:
```{r, eval=FALSE}
1. Item 1
1. Item 2
```
_Produces:_

1. Item 1
1. Item 2

Nested lists
=======================================================
incremental: false
```{r, eval=FALSE}
1. Item 1
2. Item 2
  * Item 2a
  * Item 2b
```
_Produces:_

1. Item 1
2. Item 2
  * Item 2a
  * Item 2b

Tables
=======================================================
incremental: false
Creating a table is just a little more complicated:
* Each row of the table must fit on one line
* The columns are separated by vertical line symbols (|)
* The first line is a header and must be underlined with dashes
```{r, eval=FALSE}
Characteristic | Control | Active
-------------- | ------- | ------
Age      | 18.1  | 20.2
Weight      | 170.5   | 168.4
```

Tables (Continued)
=======================================================
incremental: false
```{r, eval=FALSE}
Characteristic | Control | Active
-------------- | ------- | ------
Age      | 18.1  | 20.2
Weight      | 170.5   | 168.4
```
_Produces:_

Characteristic | Control | Active
---- | ---- | ----
Age | 18.1 | 20.2
Weight | 170.5 | 168.4

Links
=======================================================
incremental: false
A link consists of text in brackets and a URL following in parentheses:
```{r, eval=FALSE}
Click here to go to the [Google](http://google.com) main page.
```
_Produces:_

Click here to go to the [Google](http://google.com) main page.

Images
=======================================================
incremental: false
An image works the same way, except that it is preceded by an exclamation mark (!)

![spclogo](graphic_6_opaque_small.png)

Note: You can also include files on your disk. Just put the path instead of a URL.

Inserting R code
=======================================================
incremental: false
R code is inserted by specifying a code block:

```{r}
hist(airquality$Temp)
```

These are called **Code Chunks**.

Note that a code chunk starts and ends with three back quotes, and
must say "{r}" <g>lowercase r!</g>

Inserting R code: Example
=======================================================
incremental: false
* you can use Ctrl-Alt-i to insert a chunk of R code
* you can use the "Chunks" menu on the right top of the editor

R code chunk options
=======================================================
incremental: false
You can also specify options:
{r, options}

* eval=FALSE  <g>doesn't execute the commands</g>
* echo=FALSE  <g>doesn't show the R code</g>
* results='hide'  <g>suppresses text output, shows plots</g>
* fig.width, fig.height   <g>can be used to specify the figure width and height in inches</g>
* fig.align='center'   <g>centers the figure</g>

For more options, see http://yihui.name/knitr/options#chunk_options

Embedded R code
=======================================================
incremental: false
can embed R calculations in the middle of sentences by using &#96;r  ... &#96;

For example,
```{r, eval=FALSE}
The median temperature is `r median(airquality$Temp)`.
```
_Produces:_

The median temperature is `r median(airquality$Temp)`.


Working with Markdown
=======================================================
incremental: false
Markdown files have their own environment.
* You won't see the variables in the environment tab
* The tab key won't work for your own variables and dataset

Work in the console, copy to the markdown file

Take small steps, knit often

Homework
=======================================================
type: chapter

Instructions
=======================================================
incremental: false
Assuming you've cloned the coding_style_lecture project from GitHub,

* Open homework1.Rmd
* Knit it (I'm having good luck with Word)
* Follow the instructions, create your Rmarkdown document
    * Remember, you can try code in the console and copy it to the code chunk in your document
* Email your result to [wade.rogers@spcytomics.com](mailto:wade.rogers@spcytomics.com)


